Classes: (look in memory and main GUI)
Memory Class:
        The purpose of the memory class is to define the registers and define all the different operations performed from the different user inputs.
        Functions:
                Constructor: The purpose of the constructor is to create the core variables like the register, accumulator and pointer. The register is used to hold the different inputs from the user to do operations with. The accumulator is used as basically a temp variable that all operations are performed on and the pointer used for the branch holding the target memory location to branch to. The pre-conditions for this function is whenever a new Memory class is created. The post-conditions are the creation of the different variables and setting aside that memory.
                readProgram: The purpose of this function is to read in the values from the file provided from the user. The parameter is file which is just the name of the file provided. The pre-condition for this function is it getting called directly and the post-conditions are that the user’s text file gets parsed into different lines and the first registers are filled by the “words” from the input.
                read: The purpose of this function is to take a “word” from the user and read it into a specified memory location. This function takes two parameters, the first is the memory location the value will get stored at and the second is the “word” that’s going to be stored in memory. The pre-condition for this function is being called by the user in their text file when the first two numbers of the line are 10. The post-condition is that the specified memory location now holds the number assigned by the user.
                write: The purpose of this function is to write a “word” from a specified memory location and display it on the screen. This function takes one parameter which is the memory location the “word” is located at. This function will return the “word” in that memory location. The pre-condition for this function is being called by the user in their text file when the first two numbers of the line are 11. The post-condition is that the number in the specified memory location is printed to the screen.
                load: The purpose of this function is to load a “word” from a specified memory location into the accumulator. This function takes one parameter which is the memory location the “word” is located at. The pre-condition for this function is being called by the user in their text file when the first two numbers of the line are 20. The post-condition is that the accumulator will be assigned the value that’s in the specified memory location.
                store: The purpose of this function is to store a “word” from the accumulator into a specified memory location. This function takes one parameter which is the memory location the “word” is located at. The pre-condition for this function is being called by the user in their text file when the first two numbers of the line are 21. The post-condition is that the value in the specified memory location is assigned the value in the accumulator.
                add: The purpose of this function is to take a “word” from a memory location and add it to the accumulator. This function takes 1 parameter which is the specified memory location. The pre-condition for this function is being called by the user in their text file when the first two numbers of the line are 30. The post-condition is that the accumulator has increased by the amount in the memory location.
                subtract: The purpose of this function is to take a “word” from a memory location and subtract it from the accumulator. This function takes 1 parameter which is the specified memory location. The pre-condition for this function is being called by the user in their text file when the first two numbers of the line are 31. The post-condition is The post-condition is that the accumulator has decreased by the amount in the memory location.
                divide: The purpose of this function is to take a “word” from a memory location and divide it from the accumulator. This function takes 1 parameter which is the specified memory location. The pre-condition for this function is being called by the user in their text file when the first two numbers of the line are 32. The post-condition is that the accumulator is divided by the amount in the memory location.
                multiply: The purpose of this function is to take a “word” from a memory location and multiply it with the accumulator. This function takes 1 parameter which is the specified memory location. The pre-condition for this function is being called by the user in their text file when the first two numbers of the line are 33. The post-condition is that the accumulator is multiplied by the amount in the memory location.
                branch: The purpose of this function is to go to or branch to a specific spot in memory. This function takes 1 parameter which is the specified memory location. The pre-condition for this function is being called by the user in their text file when the first two numbers of the line are 40. The post-condition is that the program will redirect to the specified memory spot.
                branchneg: The purpose of this function is to go to or branch to a specific spot in memory when the accumulator is negative. This function takes 1 parameter which is the specified memory location. The pre-condition for this function is being called by the user in their text file when the first two numbers of the line are 41. The post-condition is that the program will redirect to the specified memory spot if the accumulator is negative.
                branchzero: The purpose of this function is to go to or branch to a specific spot in memory when the accumulator is negative. This function takes 1 parameter which is the specified memory location. The pre-condition for this function is being called by the user in their text file when the first two numbers of the line are 41. The post-condition is that the program will redirect to the specified memory spot when the accumulator is zero.
                inc_reg: The purpose of this function is to point the pointer to the next line from the user text file. The pre-condition for this function is after it’s called by the code usually after each operation runs. The post-condition is that the variable pointer will point 1 address forward.